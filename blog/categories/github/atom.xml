<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Github | I'm Xiaofei]]></title>
  <link href="http://hongfei.me/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://hongfei.me/"/>
  <updated>2014-10-28T18:58:55+08:00</updated>
  <id>http://hongfei.me/</id>
  <author>
    <name><![CDATA[王小飞]]></name>
    <email><![CDATA[immmfei@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GitHub for Mac使用细节]]></title>
    <link href="http://hongfei.me/blog/2014/03/03/github-for-macshi-yong-xi-jie/"/>
    <updated>2014-03-03T17:14:43+08:00</updated>
    <id>http://hongfei.me/blog/2014/03/03/github-for-macshi-yong-xi-jie</id>
    <content type="html"><![CDATA[<ul>
<li><strong><em>将已有的项目上传：</em></strong></li>
</ul>


<p>首先因为项目中一些文件不需要版本控制，需要忽略上传。</p>

<p>这时候简便方法是让github帮你生成.gitignore文件（里面记录了忽略文件格式的细节）</p>

<p>在github上create new Repository，并选择Add .gitignore</p>

<p>这时候仓库帮你生成两个文件 . gitignore和 README.md</p>

<p>注意：这里不能创建本地Repository。如果在已有的项目中git init，再push的时候，你github上的仓库和本地仓库里的文件不一致。是无法上传的。</p>

<p>所以下一步要做的是clone github上创建的仓库到本地（这时候他就是本地仓库）。</p>

<p>然后将你的项目放到这个仓库里。</p>

<!--more-->


<p>终端输入 git add . （暂存本地仓库里的所有文件和文件夹）</p>

<p>git commit -m ‘说明内容’’: 提交执行说明（必须）</p>

<p>git push origin master  （由于clone的仓库，不需要绑定远程仓库地址，直接push）</p>

<p>这样add的文件都上传到github仓库了</p>

<hr />

<ul>
<li><strong><em>上传项目到空仓库</em></strong></li>
</ul>


<p>在github上create new Repository，Add .gitignore为None</p>

<p>然后github会提示你本仓库的命令行</p>

<p>cd 项目文件夹（就视为本地仓库）</p>

<p>git init</p>

<p>git add .</p>

<p>git commit -m ‘…’</p>

<p>git remote add origin <a href="https://github.com/wangxiaofeinin/test.git">https://github.com/wangxiaofeinin/test.git</a> （给远程仓库添加起源。就是让本地仓库和远程仓库绑定同步）</p>

<p>git push origin master</p>

<p>touch README.md （为空仓库添加介绍说明。这一步不是必须，可以手动在github上添加）</p>

<p>git add README.md</p>

<hr />

<ul>
<li><strong><em>文件状态</em></strong></li>
</ul>


<p>git add 文件  是跟踪一个新文件，以备上传。</p>

<p>git status命令查看被跟踪文件的状态</p>

<p>输出“ Changes to be committed：” 这行下面的，都是add后已被跟踪的，处于暂存状态的文件。</p>

<p>“Changed but no updated” 这行下面记录着已经跟踪的被修改了的文件，需要重新 add它，才会成为暂存状态的文件。重新git status 它会显示在committed下面</p>

<p>// 解决每次push都要求输入用户名密码问题，要配置本地git个人信息：</p>

<p>git config —global user.name “wangxiaofeinin”</p>

<p>git config —global user.email “285671298@qq.com”</p>

<hr />

<ul>
<li><p><strong><em>github 客户端使用</em></strong></p></li>
<li><p>没有远程仓库。创建本地仓库，指向已有项目。输入commit信息，然后push，会提示在github上创建新远程仓库，输入仓库名即可在github上同步。</p></li>
<li><p>有远程仓库，使用客户端clone下来。在clone的文件夹里添加修改文件，然后在客户端项目的 Changes里，会自动添加你修改和添加的文件，输入commit，push即可。</p></li>
</ul>


<hr />
]]></content>
  </entry>
  
</feed>
